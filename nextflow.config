manifest {
    author = "Tiago F. Jesus"
    description = "This is a nextflow pipeline to generate the pATLAS database."
}

params {
    help = false
    db_name = "plasmid_db_dev"
    ncbi_ftp = "ftp://ftp.ncbi.nlm.nih.gov/refseq/release/plasmid/plasmid.*.1.genomic.fna.gz"
    abricateDatabases = ["resfinder", "card", "plasmidfinder", "vfdb", "virulencefinder"]
    abricateId = "90"
    abricateCov = "80"
    cardCsv = "/data/aro_index.csv" //file inside docker image
    sequencesRemove = false
}

process {
    // containers
    $downloadFastas.container = "tiagofilipe12/patlas-db-creation:1.5.0"
    $runMASHix.container = "tiagofilipe12/patlas-db-creation:1.5.0"
    $abricate2db.container = "tiagofilipe12/patlas-db-creation:1.5.0"
    $bowtieIndex.container = "flowcraft/mapping-patlas:1.4.1-1"
    $abricate.container = "flowcraft/abricate:0.8.0-1"
    // resources
    $downloadFastas.cpus = 1
    $downloadFastas.cpus = 1
    $downloadFastas.memory = "4GB"
    $runMASHix.cpus = 2
    $runMASHix.memory = { 4.GB * task.attempt }
    $abricate2db.cpus = 1
    $abricate2db.memory = { 1.GB * task.attempt }
    $bowtieIndex.cpus = 2
    $bowtieIndex.memory = { 4.GB * task.attempt }
    $abricate.cpus = 1
    $abricate.memory = { 4.GB * task.attempt }

}

// in fact for abricate a container from flowcraft may be used: flowcraft/abricate:0.8.0-1

profiles {
    // standard uses executor local and docker
    standard {
        docker.enabled = true
    }
    singularity {
        cacheDir = "$HOME/.singularity_cache"
        singularity.enabled = true
    }
    slurm_shifter {
        process.executor  = "slurm"
        process.errorStrategy = "retry"
        process.maxRetries = 3
        shifter.enabled = true

    }
    lobo {
        process.executor  = "slurm"
        process.errorStrategy = "retry"
        // option exclusive for imm-lobo cluster
        process.clusterOptions = "--exclude=compute-1"
        process.maxRetries = 3
        shifter.enabled = true
    }
}

includeConfig "user.config"
